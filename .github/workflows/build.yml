name: Build and deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY_URL: registry.moshicon.se:30000

jobs:
  build-frontend:
    name: Build web frontend
    runs-on: moshicon-se-runner-set
    outputs:
      IMAGE_TAG: ${{ steps.set-tag.outputs.tag }}
    env:
      IMAGE_NAME: emoji-chat/frontend
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Set image tag
        id: set-tag
        run: |
          TAG=$(git rev-parse --short=7 HEAD)-$(date +'%Y%m%d')
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build container
        run: podman build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push container to registry
        run: skopeo copy containers-storage:localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --dest-tls-verify=false docker://${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy-helm:
    name: Deploy Helm Chart
    needs: build-frontend
    runs-on: moshicon-se-runner-set
    steps:
      - uses: actions/checkout@v3

      - name: Deploy with Helm
        run: |
          helm upgrade --install emoji-chat ./charts/emoji-chat \
            --namespace emoji-chat \
            --create-namespace \
            --set image.tag=${{ needs.build-frontend.outputs.IMAGE_TAG }} \
            --set global.imageRegistry=${{ env.REGISTRY_URL }}
